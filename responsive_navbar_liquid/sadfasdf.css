/* stopped at 12 minutes, some reason the hamburger
wont' show up on the far right */


/* removing basic styling: */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: sans-serif;
}

nav {
  height: 10vh;
  background: #5b78c7;
}


/* to visualize how big the nav-links box is,
you can add a background of a different color*/
.nav-links{
  /* using flex here, makes them inline */
  display: flex;
  /* to remove the dots (since it's an unordered list) */
  list-style: none;
  /*takes up this much of widht of nav*/
  width: 50%;
  /*same height as the nav*/
  height: 100%;
  /* equally spaced on all sides, based on the center -horizontally */
  justify-content: space-around;
  /* spaces them vertically */
  align-items: center;
  /* when you add auto, it's going to push it on the far side
  of the margin (so margin-right: auto, would be far right)*/
  margin-left: auto;
}

.nav-links li a {
  color: white;
  text-decoration: none;
  font-size: 16px;
}

.landing {
  height: 90vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.landing h1 {
  margin: 100px;
  font-size: 50px;
  color: #ae5fce;
}

/* making it responsive
  conditional statement,
  pointed at the screen and if the max-width gets to
  768px, then the conditionals are ran
*/

@media screen and (max-width: 768px) {
/*
custom making the hamburger
with 3 empty line divs, this is the building step
*/
.line {
  width: 30px;
  height: 3px;
  background: white;
  margin: 5px;
}

/*
positioning the hamburger, we need to set <nav> to relative
then we can move the hamburger to the top right
*/
  nav {
    position: relative;
  }

    .hamburger {
      position: absolute;
      cursor: pointer;
      right: 5%;
      top: 50%;
      transform: translate(-5%, -50%);
      z-index: 2;
    }

    .nav-links {
      position: fixed;
      background: #bce0ee;
      height: 100vh;
      width: 100%;
      flex-direction: column;
      clip-path: circle(100px at 90% -10%);
      -webkit-clip-path: circle(100px at 90% -10%);
      transition: all 1s ease-out;
      pointer-events: none;
    }
    .nav-links.open {
      clip-path: circle(1000px at 90% -10%);
      -webkit-clip-path: circle(1000px at 90% -10%);
      pointer-events: all;
    }
    .landing {
      flex-direction: column;
    }
    .nav-links li {
      opacity: 0;
    }
    .nav-links li a {
      font-size: 25px;
    }
    .nav-links li:nth-child(1) {
      transition: all 0.5s ease 0.2s;
    }
    .nav-links li:nth-child(2) {
      transition: all 0.5s ease 0.4s;
    }
    .nav-links li:nth-child(3) {
      transition: all 0.5s ease 0.6s;
    }
    li.fade {
      opacity: 1;
    }
  }
